// Generated by ResourceGenerator
// swiftlint:disable all

{% macro accessLevel %}public{% endmacro %}
import Foundation

enum Strings {
    {% for entry in entries %}
    {% call accessLevel %} static let {{ entry.key|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords }} = StringResource(key: "{{ entry.key }}", table: "{{ filename }}", bundle: .main)
    {% endfor %}
}

// MARK: - Resource Types

{% call accessLevel %} struct StringResource: Sendable {
    {% call accessLevel %} let key: String
    {% call accessLevel %} let table: String
    {% call accessLevel %} let bundle: Bundle
    
    {% call accessLevel %} var text: String {
        NSLocalizedString(key, tableName: table, bundle: bundle, comment: "")
    }
    
    {% call accessLevel %} func callAsFunction() -> String {
        text
    }
    
    {% call accessLevel %} func callAsFunction(_ argument: CVarArg) -> String {
        String(format: text, argument)
    }
    
    {% call accessLevel %} func callAsFunction(_ arguments: CVarArg...) -> String {
        String(format: text, arguments: arguments)
    }
    
    {% call accessLevel %} func text(count: Int) -> String {
        let format: String
        switch count {
        case 0:
            format = NSLocalizedString("\(key)_zero", tableName: table, bundle: bundle, value: text, comment: "")
        case 1:
            format = NSLocalizedString("\(key)_one", tableName: table, bundle: bundle, value: text, comment: "")
        case 2:
            format = NSLocalizedString("\(key)_two", tableName: table, bundle: bundle, value: text, comment: "")
        case 3...4:
            format = NSLocalizedString("\(key)_few", tableName: table, bundle: bundle, value: text, comment: "")
        case 5...:
            format = NSLocalizedString("\(key)_many", tableName: table, bundle: bundle, value: text, comment: "")
        default:
            format = text
        }
        return String(format: format, count)
    }
} 