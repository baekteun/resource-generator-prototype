// Generated by ResourceGenerator
// swiftlint:disable all

import Foundation
import UIKit

enum Assets {

    // MARK: - Colors

    public enum Colors: Sendable {
        public static let breAk = ColorResource(name: "Bre_ak", bundle: .main)
        public static let asdf = ColorResource(name: "asdf", bundle: .main)
        public static let accentColor = ColorResource(name: "AccentColor", bundle: .main)
        public static let `break` = ColorResource(name: "Break", bundle: .main)
        public static let breaK = ColorResource(name: "Brea-k", bundle: .main)
    }

    // MARK: - Images

    public enum Images: Sendable {
        public static let timetableControlCenter = ImageResource(name: "timetable_control_center", bundle: .main)
    }

    // MARK: - Data

    public enum Data: Sendable {
    }
}

// MARK: - Resource Types

public struct ColorResource: Sendable {
    public let name: String
    public let bundle: Bundle

    public var color: UIColor {
        guard let color = UIColor(named: name, in: bundle, compatibleWith: nil) else {
            fatalError("Unable to load color named \(name).")
        }
        return color
    }
}

public struct ImageResource: Sendable {
    public let name: String
    public let bundle: Bundle

    public var image: UIImage {
        guard let image = UIImage(named: name, in: bundle, compatibleWith: nil) else {
            fatalError("Unable to load image named \(name).")
        }
        return image
    }
}

public struct DataResource: Sendable {
    public let name: String
    public let bundle: Bundle

    public func data() throws -> Data {
        guard let url = bundle.url(forResource: name, withExtension: nil) else {
            throw ResourceError.notFound
        }
        return try Data(contentsOf: url)
    }
}

public enum ResourceError: Error {
    case notFound
} 
